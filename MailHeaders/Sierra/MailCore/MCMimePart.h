//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class MCFileTypeInfo, MCMimeBody, MCParsedMessage, NSArray, NSData, NSError, NSMutableDictionary, NSString, WebArchive;

@interface MCMimePart : NSObject
{
    id _parentOrBody;	// 8 = 0x8
    MCMimePart *_nextPart;	// 16 = 0x10
    long long _typeCode;	// 24 = 0x18
    long long _subtypeCode;	// 32 = 0x20
    NSString *_type;	// 40 = 0x28
    NSString *_subtype;	// 48 = 0x30
    NSMutableDictionary *_bodyParameters;	// 56 = 0x38
    NSString *_contentTransferEncoding;	// 64 = 0x40
    id _encryptSignLock;	// 72 = 0x48
    NSArray *_messageSigners;	// 80 = 0x50
    NSError *_smimeError;	// 88 = 0x58
    NSMutableDictionary *_otherIvars;	// 96 = 0x60
    id _partNumberLock;	// 104 = 0x68
    NSString *_partNumber;	// 112 = 0x70
    BOOL _isMimeEncrypted;	// 120 = 0x78
    BOOL _isMimeSigned;	// 121 = 0x79
    BOOL _fromMicrosoft;	// 122 = 0x7a
    NSData *_headerData;	// 128 = 0x80
    NSData *_encodedBodyData;	// 136 = 0x88
    unsigned long long _contentLength;	// 144 = 0x90
    unsigned long long _headerEncodingHint;	// 152 = 0x98
    NSString *_sender;	// 160 = 0xa0
    MCMimeBody *_decryptedMimeBody;	// 168 = 0xa8
}

+ (BOOL)mimeParameterIsHumanReadable:(id)arg1;	// IMP=0x00000000000657a5
@property(retain, nonatomic) MCMimeBody *decryptedMimeBody; // @synthesize decryptedMimeBody=_decryptedMimeBody;
@property(copy, nonatomic) NSString *sender; // @synthesize sender=_sender;
@property(nonatomic) unsigned long long headerEncodingHint; // @synthesize headerEncodingHint=_headerEncodingHint;
@property(nonatomic) BOOL fromMicrosoft; // @synthesize fromMicrosoft=_fromMicrosoft;
@property(nonatomic) BOOL isMimeSigned; // @synthesize isMimeSigned=_isMimeSigned;
@property(nonatomic) BOOL isMimeEncrypted; // @synthesize isMimeEncrypted=_isMimeEncrypted;
@property(nonatomic) unsigned long long contentLength; // @synthesize contentLength=_contentLength;
@property(copy, nonatomic) NSString *contentTransferEncoding; // @synthesize contentTransferEncoding=_contentTransferEncoding;
@property(readonly, copy, nonatomic) NSData *encodedBodyData; // @synthesize encodedBodyData=_encodedBodyData;
@property(readonly, copy, nonatomic) NSData *headerData; // @synthesize headerData=_headerData;
//- (void).cxx_destruct;	// IMP=0x00000000000768f9
- (id)_decodeMultipartAppledouble;	// IMP=0x00000000000761f9
- (id)_decodeApplicationApplefile;	// IMP=0x000000000007607f
- (id)_decodeApplicationMacBinHex;	// IMP=0x0000000000075f2f
- (id)_decodeMessageExternalBody;	// IMP=0x0000000000075af1
- (id)_decodeMessagePartial;	// IMP=0x00000000000759be
- (id)_decodeMessageRfc822;	// IMP=0x0000000000075599
- (id)_decodeMessageDeliveryStatus;	// IMP=0x0000000000075587
- (id)_decodeApplicationSmil;	// IMP=0x0000000000075568
- (id)_decodeApplicationZip;	// IMP=0x000000000007538b
- (id)_decodeApplicationOctetStream;	// IMP=0x0000000000075017
- (id)_decodeApplicationAppleCompositeImage;	// IMP=0x0000000000074d09
- (id)_decodeMultipartFolder;	// IMP=0x0000000000074b5e
- (id)_decodeMultipartRelated;	// IMP=0x0000000000073baf
- (id)_decodeMultipartAlternative;	// IMP=0x00000000000737ea
- (id)_decodeMultipart;	// IMP=0x00000000000732fc
- (id)_decodeTextCalendar;	// IMP=0x00000000000732ea
- (id)_decodeTextHtml;	// IMP=0x00000000000732d8
- (id)_decodeTextEnriched;	// IMP=0x0000000000073275
- (id)_decodeTextRtf;	// IMP=0x00000000000730af
- (id)_decodeTextRichtext;	// IMP=0x000000000007304c
- (id)_decodeText;	// IMP=0x0000000000072fdc
- (id)_decodeTextPlain;	// IMP=0x0000000000072f6c
- (id)decode;	// IMP=0x0000000000072a7e
@property(readonly, copy, nonatomic) NSString *fullMimeTypeEvenInsideAppleDouble;
- (unsigned long long)_getHFSAttachmentEncodingHint;	// IMP=0x00000000000728aa
- (id)_chosenAlternativePartOrParts:(id *)arg1;	// IMP=0x00000000000725f3
- (id)_getSomeCharsetFromPartTree;	// IMP=0x0000000000072341
@property(readonly, nonatomic) BOOL isDirectoryAttachment;
@property(copy) NSString *partNumber;
- (void)_setupDictionary:(id *)arg1 fromArray:(id)arg2;	// IMP=0x0000000000071b19
- (BOOL)parseIMAPPropertyList:(id)arg1;	// IMP=0x0000000000070a86
- (BOOL)parse;	// IMP=0x0000000000070578
- (id)_parseUUEncodedPartsWithEncodingHint:(unsigned long long)arg1;	// IMP=0x000000000006fec6
- (void)_parseSubpartsWithEncodingHint:(unsigned long long)arg1 hasVisualEncoding:(char *)arg2;	// IMP=0x000000000006f5e6
- (void)_parseHeadersWithEncodingHint:(unsigned long long)arg1 hasVisualEncoding:(char *)arg2;	// IMP=0x000000000006e90c
- (void)setDecryptedMimeBody:(id)arg1 isEncrypted:(BOOL)arg2 isSigned:(BOOL)arg3 error:(id)arg4;	// IMP=0x000000000006e805
- (void)clearCachedDecryptedMimeBody;	// IMP=0x000000000006e74a
- (id)decryptedMimeBodyIsEncrypted:(char *)arg1 isSigned:(char *)arg2 error:(id *)arg3;	// IMP=0x000000000006e668
- (id)_archiveForMultipartRelated;	// IMP=0x000000000006e0d4
@property(readonly, copy, nonatomic) WebArchive *webArchive;
- (id)_remoteAttachmentsByURL;	// IMP=0x000000000006d3d0
- (unsigned long long)_stringEncoding;	// IMP=0x000000000006d379
@property(readonly, nonatomic) MCParsedMessage *parsedMessage;
- (id)_createArchiveWithConvertedPlainTextBodyClassFromArchive:(id)arg1;	// IMP=0x000000000006cc82
- (id)_archiveForFileWrapper:(id)arg1 URL:(id)arg2;	// IMP=0x000000000006cab5
- (id)_archiveForString:(id)arg1 URL:(id)arg2 needsPlainTextBodyClass:(BOOL)arg3;	// IMP=0x000000000006c9b6
- (id)_archiveForData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5;	// IMP=0x000000000006c8e7
- (id)_archiveForData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5 subresources:(id)arg6 subframeArchives:(id)arg7;	// IMP=0x000000000006c79a
- (id)_decodedContent;	// IMP=0x000000000006c733
- (id)htmlStringForMimePart:(id)arg1 attachment:(id)arg2;	// IMP=0x000000000006c5dc
- (void)_htmlString:(id *)arg1 createWebResource:(id *)arg2 forFileWrapper:(id)arg3 partNumber:(id)arg4;	// IMP=0x000000000006c3cc
@property(readonly, nonatomic) MCMimePart *textHtmlPart;
- (id)textPart;	// IMP=0x000000000006c185
@property(readonly, copy, nonatomic) NSData *signedData;
@property(readonly, nonatomic) MCMimePart *bestAlternative;
@property(readonly, nonatomic) MCMimePart *startPart;
- (void)_configureFileWrapper:(id)arg1;	// IMP=0x000000000006b432
- (id)_fileWrapper;	// IMP=0x000000000006af75
- (id)_getAttachment;	// IMP=0x000000000006aba4
- (id)_createFileWrapper;	// IMP=0x000000000006a9ea
@property(readonly, nonatomic) BOOL isAutoArchivePart;
- (BOOL)_isIWorkArchive;	// IMP=0x000000000006a8e5
- (void)_setMessageSigners:(id)arg1 andSigningError:(id)arg2;	// IMP=0x000000000006a813
- (id)copyMessageSigners;	// IMP=0x000000000006a78f
- (BOOL)needsSignatureVerification:(id *)arg1;	// IMP=0x000000000006a6f0
@property(readonly, nonatomic) BOOL usesKnownSignatureProtocol;
@property(readonly, nonatomic) BOOL isRich;
@property(readonly, nonatomic) BOOL isAttachment;
- (BOOL)shouldConsiderInlineOverridingExchangeServer;	// IMP=0x0000000000069cab
@property(readonly, nonatomic) BOOL isMessageExternalBodyWithURL;
- (id)_partThatIsAttachment;	// IMP=0x00000000000699fb
- (void)markAsStationeryImage;	// IMP=0x00000000000699db
@property(readonly, nonatomic) BOOL isStationeryImage;
@property(readonly, nonatomic) BOOL isCalendar;
@property(readonly, nonatomic) BOOL isReadableText;
@property(readonly, nonatomic) unsigned long long approximateDecodedSize;
@property(readonly, nonatomic) unsigned long long approximateRawSize;
@property(readonly, copy, nonatomic) NSArray *attachmentFilenames;
@property(readonly, copy, nonatomic) NSArray *attachments;
- (void)getNumberOfAttachments:(unsigned int *)arg1 filenames:(id)arg2 numberOfTNEFAttachments:(unsigned int *)arg3 isSigned:(char *)arg4 isEncrypted:(char *)arg5;	// IMP=0x00000000000692a8
@property(readonly, nonatomic) unsigned int numberOfAttachments;
- (void)_getAttachmentsAndAddToCount:(unsigned int *)arg1 isSigned:(char *)arg2 isEncrypted:(char *)arg3 attachments:(id)arg4 attachmentsName:(id)arg5 numberOfTNEFAttachments:(unsigned int *)arg6;	// IMP=0x0000000000068cd3
@property(readonly, nonatomic) BOOL isEncrypted;
@property(readonly, copy, nonatomic) NSString *attachmentFilename;
- (id)_attachmentFilenameWithHiddenExtension:(char *)arg1;	// IMP=0x00000000000686ce
- (void)_appendToDescription:(id)arg1 withIndent:(unsigned long long)arg2;	// IMP=0x0000000000067ba7
- (id)description;	// IMP=0x0000000000067af5
@property(retain, nonatomic) MCMimeBody *mimeBody;
@property(readonly, copy, nonatomic) NSString *bodyConvertedFromFlowedText;
@property(readonly, copy, nonatomic) NSString *bodyString;
- (id)decodedFromMimeData:(id)arg1;	// IMP=0x000000000006733f
@property(readonly, copy, nonatomic) NSData *decodedData;
@property(readonly, nonatomic) BOOL hasDataAvailable;
- (void)addSubpart:(id)arg1;	// IMP=0x0000000000067000
@property(copy, nonatomic) NSArray *subparts;
- (id)_subpartAtIndex:(long long)arg1;	// IMP=0x0000000000066cfc
//- (void)enumerateSubPartsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000668d3
@property(readonly, nonatomic) MCMimePart *nextSiblingPart;
@property(readonly, nonatomic) MCMimePart *firstChildPart;
@property(readonly, nonatomic) MCMimePart *parentPart;
@property(copy, nonatomic) NSArray *languages;
@property(copy, nonatomic) NSString *contentLocation;
@property(readonly, copy, nonatomic) NSString *contentIDURLString;
@property(copy, nonatomic) NSString *contentID;
@property(copy, nonatomic) NSString *contentDescription;
@property(readonly, copy, nonatomic) NSArray *dispositionParameterKeys;
- (void)setDispositionParameter:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000066067
- (id)dispositionParameterForKey:(id)arg1;	// IMP=0x0000000000065fb1
@property(copy, nonatomic) NSString *disposition;
@property(readonly, nonatomic) MCFileTypeInfo *typeInfo;
@property(readonly, nonatomic) unsigned int macCreatorCode;
@property(readonly, nonatomic) unsigned int macTypeCode;
@property(readonly, nonatomic) unsigned long long formatFlowedOptions;
@property(readonly, copy, nonatomic) NSArray *bodyParameterKeys;
- (void)setBodyParameter:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000000065891
- (id)bodyParameterForKey:(id)arg1;	// IMP=0x0000000000065827
- (BOOL)_isTypeCode:(long long)arg1 subtypeCode:(long long)arg2;	// IMP=0x0000000000065748
- (BOOL)isType:(id)arg1 subtype:(id)arg2;	// IMP=0x0000000000065649
@property(copy, nonatomic) NSString *subtype;
- (long long)subtypeCode;	// IMP=0x000000000006540e
@property(copy, nonatomic) NSString *type;
- (long long)typeCode;	// IMP=0x00000000000652d3
@property(readonly, nonatomic) unsigned long long encodedBodyDataLength;
- (void)dealloc;	// IMP=0x00000000000650ad
- (id)initWithEncodedData:(id)arg1;	// IMP=0x0000000000064f60
- (id)init;	// IMP=0x0000000000064f4c
- (void)verifySignature;	// IMP=0x0000000000097a29
- (id)decodeApplicationPkcs7;	// IMP=0x0000000000096957
- (id)decodeMultipartSigned;	// IMP=0x00000000000968e6
- (id)_verifySignatureWithCMSDecoder:(struct _CMSDecoder *)arg1 againstSender:(id)arg2 signingError:(id *)arg3;	// IMP=0x00000000000990b1
- (struct _CMSDecoder *)_newCMSDecoderWithMimePart:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000982ae
- (id)newEncryptedPartWithData:(id)arg1 certificates:(id)arg2 encryptedData:(id *)arg3;	// IMP=0x000000000009baf3
- (id)newSignedPartWithData:(id)arg1 sender:(id)arg2 identity:(struct OpaqueSecIdentityRef *)arg3 signatureData:(id *)arg4;	// IMP=0x000000000009a305
- (int)_addDataConvertingLineEndingsFromUnixToNetwork:(id)arg1 toCMSEncoder:(struct _CMSEncoder *)arg2;	// IMP=0x000000000009c5fa

@end

