//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Mail/MFRemoteStore.h>

#import "IMAPMailboxDelegate.h"
#import "IMAPMessageDataSource.h"

@class IMAPCommandPipeline, IMAPDownloadCache, IMAPMailbox, MFIMAPAccount, MFMailbox, NSArray, NSMutableArray, NSOperationQueue, NSString;

@interface MFLibraryIMAPStore : MFRemoteStore <IMAPMailboxDelegate, IMAPMessageDataSource>
{
    IMAPMailbox *_IMAPMailbox;	// 16 = 0x10
    IMAPDownloadCache *_downloadCache;	// 24 = 0x18
    IMAPCommandPipeline *_fetchPipeline;	// 32 = 0x20
    NSMutableArray *_recentlyDeletedMessageIDs;	// 40 = 0x28
    id _uidNextStatusLock;	// 48 = 0x30
    BOOL _isOpenedByUser;	// 56 = 0x38
    BOOL _supportsCustomPermanentFlags;	// 57 = 0x39
    BOOL _supportsModificationSequences;	// 58 = 0x3a
    unsigned long long _totalCount;	// 64 = 0x40
    NSString *_mailboxName;	// 72 = 0x48
    NSOperationQueue *_flagChangeQueue;	// 80 = 0x50
}

+ (id)largeDeleteLog;	// IMP=0x00000000001458a0
@property(readonly, nonatomic) NSOperationQueue *flagChangeQueue; // @synthesize flagChangeQueue=_flagChangeQueue;
@property(copy) NSString *mailboxName; // @synthesize mailboxName=_mailboxName;
@property BOOL supportsModificationSequences; // @synthesize supportsModificationSequences=_supportsModificationSequences;
@property(nonatomic) BOOL supportsCustomPermanentFlags; // @synthesize supportsCustomPermanentFlags=_supportsCustomPermanentFlags;
@property unsigned long long totalCount; // @synthesize totalCount=_totalCount;
@property BOOL isOpenedByUser; // @synthesize isOpenedByUser=_isOpenedByUser;
- (void).cxx_destruct;	// IMP=0x00000000001505f9
@property(readonly, copy, nonatomic) NSString *stateStringForDiagnostics;
- (void)updateUidValidityFromMailbox:(id)arg1;	// IMP=0x00000000001502ef
- (void)updateComputedHighestModificationSequence:(unsigned long long)arg1 forMailbox:(id)arg2;	// IMP=0x000000000015026a
- (unsigned long long)computedHighestModificationSequenceForMailbox:(id)arg1;	// IMP=0x00000000001501ef
- (unsigned long long)allegedHighestModificationSequenceForMailbox:(id)arg1;	// IMP=0x0000000000150174
@property(readonly, nonatomic) MFIMAPAccount *account;
@property(readonly, copy, nonatomic) NSArray *messagesBeingRouted;
@property(readonly, nonatomic) IMAPDownloadCache *downloadCache;
@property(readonly, nonatomic) IMAPCommandPipeline *fetchPipeline;
- (void)_setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;	// IMP=0x000000000014fa1c
- (void)messagesWereAdded:(id)arg1 secondaryMessages:(id)arg2 duringOpen:(BOOL)arg3 options:(id)arg4;	// IMP=0x000000000014f7b1
- (BOOL)isSortedAscending;	// IMP=0x000000000014f7a9
- (id)sortOrder;	// IMP=0x000000000014f795
- (void)writeUpdatedMessageDataToDisk;	// IMP=0x000000000014f78f
- (id)_deletedMessages;	// IMP=0x000000000014f71e
- (id)_copyOfAllMessagesSortedByUidWithOptions:(unsigned int)arg1;	// IMP=0x000000000014f621
- (id)copyOfOldCachedMessagesContentsForUid:(unsigned int)arg1;	// IMP=0x000000000014f517
- (BOOL)hasValidCacheFileForUid:(unsigned int)arg1;	// IMP=0x000000000014f3a9
- (BOOL)hasValidCacheFileForMessage:(id)arg1;	// IMP=0x000000000014f376
- (id)_preferredOrderForFetchingMessageBodies:(id)arg1;	// IMP=0x000000000014f033
- (void)addMessageDetails:(id)arg1;	// IMP=0x000000000014ef99
- (void)setResultsForLabelChangeAction:(long long)arg1;	// IMP=0x000000000014ef17
- (void)setResultsForFlagChangeAction:(long long)arg1 uids:(id)arg2 flags:(long long)arg3 mask:(long long)arg4;	// IMP=0x000000000014ee5e
- (void)setResultsForAppendAction:(long long)arg1 newMessageDetails:(id)arg2;	// IMP=0x000000000014ed9c
- (void)setResultsForCopyAction:(long long)arg1 newMessageDetails:(id)arg2 lastBatch:(BOOL)arg3;	// IMP=0x000000000014ecec
- (void)forceResync;	// IMP=0x000000000014ec02
- (void)fixMessagesAndResetIMAPMessages;	// IMP=0x000000000014e9e8
- (BOOL)mailboxHasInconsistencies;	// IMP=0x000000000014e990
- (void)setComputedHighestModificationSequence:(unsigned long long)arg1;	// IMP=0x000000000014e90e
@property(nonatomic) unsigned long long allegedHighestModificationSequence;
- (void)setUidNextStatusIfNeeded:(unsigned int)arg1;	// IMP=0x000000000014e6ed
@property(nonatomic) unsigned int uidNextStatus;
@property(nonatomic) unsigned int uidValidityStatus;
- (id)_uidIndexSetForMessages:(id)arg1;	// IMP=0x000000000014e287
- (void)startSynchronization;	// IMP=0x000000000014e1e1
- (id)messagesWithRemoteIDs:(id)arg1;	// IMP=0x000000000014e150
@property(readonly, copy, nonatomic) NSArray *duplicateRemoteIDs;
- (id)copyOfAllMessagesWithOptions:(unsigned int)arg1;	// IMP=0x000000000014e046
- (id)copyIncompleteMessages;	// IMP=0x000000000014df4c
@property(readonly, nonatomic) BOOL canSetMessageColors;
- (void)setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;	// IMP=0x000000000014df04
- (id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2;	// IMP=0x000000000014deb1
- (id)messagesForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(BOOL)arg4 options:(unsigned int)arg5;	// IMP=0x000000000014de22
- (void)compactMailbox:(id)arg1;	// IMP=0x000000000014de09
@property(readonly, nonatomic) unsigned long long syncedMessageCount;
- (unsigned long long)totalCountAndUnseenCount:(unsigned long long *)arg1 adjustedUnreadCount:(unsigned long long *)arg2;	// IMP=0x000000000014dd47
@property(readonly, nonatomic) unsigned long long totalCountOfMessages;
- (id)getDetailsForMessagesWithUIDs:(id)arg1 waitForWrites:(BOOL)arg2;	// IMP=0x000000000014dca0
@property(readonly, nonatomic) unsigned int maximumUID;
- (id)messageForMessageID:(id)arg1;	// IMP=0x000000000014dc11
- (id)colorForMessage:(id)arg1;	// IMP=0x000000000014db71
- (id)_fetchHeaderDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;	// IMP=0x000000000014d89d
- (id)_fetchBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3 allowPartial:(BOOL)arg4;	// IMP=0x000000000014d536
- (id)_waitForDataFromDownload:(id)arg1 uid:(unsigned int)arg2;	// IMP=0x000000000014cdec
- (id)fetchAndCacheBodyDataForMessages:(id)arg1 withServerInterface:(id)arg2;	// IMP=0x000000000014bebb
- (id)bodyDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;	// IMP=0x000000000014bb1f
- (id)_dataForMessage:(id)arg1 readHeadersOnly:(BOOL)arg2;	// IMP=0x000000000014b4cd
- (id)messagesWithRowIDs:(id)arg1;	// IMP=0x000000000014b358
- (id)messageWithLibraryID:(long long)arg1 options:(unsigned int)arg2;	// IMP=0x000000000014b2b6
- (id)messageWithDefaultLoadOptionsAndRowID:(long long)arg1;	// IMP=0x000000000014b26a
- (void)reflectGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2;	// IMP=0x000000000014b208
- (void)reflectFlagChanges:(id)arg1 forMessages:(id)arg2 withUIDs:(id)arg3;	// IMP=0x000000000014b10f
- (void)_addFlagChangeActionForFlagChanges:(id)arg1 messages:(id)arg2;	// IMP=0x000000000014afe6
- (id)setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;	// IMP=0x000000000014af51
- (void)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;	// IMP=0x000000000014ade9
- (id)setGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2;	// IMP=0x000000000014ac9e
- (void)async_setGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2;	// IMP=0x000000000014ab36
- (void)imapActionReceivedError:(id)arg1 imapError:(id)arg2 missedMessages:(id)arg3;	// IMP=0x000000000014a439
- (void)createAppendActionForMessageFromFailedCopy:(id)arg1 activityType:(id)arg2 userInitiated:(BOOL)arg3;	// IMP=0x000000000014a2e6
- (void)deleteMessages:(id)arg1 moveToTrash:(BOOL)arg2;	// IMP=0x000000000014a110
- (void)reflectAddedIMAPMessages:(id)arg1 oldMessagesByNewMessage:(id)arg2;	// IMP=0x000000000014a079
- (BOOL)_isAppleOriCloudAccount;	// IMP=0x0000000000149fdd
- (id)newDictionaryForLocalFlags:(long long)arg1 serverFlags:(long long)arg2 existingDictionary:(id)arg3;	// IMP=0x00000000001493ae
- (id)_uidSearchForMessageIds:(id)arg1 destinationUidNext:(unsigned int)arg2 withSyncHandler:(id)arg3;	// IMP=0x0000000000149152
- (long long)_addMessages:(id)arg1 fromStore:(id)arg2 missedMessages:(id)arg3 newMessages:(id)arg4 newDocumentIDsByOld:(id)arg5 flagsToSet:(id)arg6 appendReason:(long long)arg7 userInitiated:(BOOL)arg8 error:(id *)arg9;	// IMP=0x00000000001483c7
- (id)_existingUIDsForUIDs:(id)arg1;	// IMP=0x00000000001481f4
- (BOOL)_copyMessagesByID:(id)arg1 toStore:(id)arg2 appendReason:(long long)arg3 userInitiated:(BOOL)arg4 settingFlags:(id)arg5 newMessages:(id *)arg6 error:(id *)arg7;	// IMP=0x0000000000147de2
- (void)_copyFlagsFromMessages:(id)arg1 flagsByMessage:(id)arg2 toMessagesWithUids:(id)arg3 withSyncHandler:(id)arg4 usedFlags:(id)arg5;	// IMP=0x00000000001476a3
- (BOOL)allowsOverwrite;	// IMP=0x000000000014769b
- (BOOL)allowsAppend;	// IMP=0x0000000000147613
- (BOOL)shouldSendUserNotificationForMessage:(id)arg1;	// IMP=0x0000000000147513
- (void)undeleteMessagesWithUIDs:(id)arg1;	// IMP=0x00000000001474b7
- (void)deleteLastMessageWithHeaders:(id)arg1 compactWhenDone:(BOOL)arg2;	// IMP=0x0000000000147307
- (void)deleteMessagesOlderThanNumberOfDays:(long long)arg1 compact:(BOOL)arg2;	// IMP=0x000000000014727b
- (void)reflectDeletedIMAPMessagesWithUIDs:(id)arg1;	// IMP=0x00000000001471e1
- (void)doCompact;	// IMP=0x00000000001470e7
@property(readonly, nonatomic) BOOL canCompact;
@property(readonly, nonatomic) MFMailbox *mailbox;
- (BOOL)canRebuild;	// IMP=0x0000000000146f9e
- (void)doRoutineCleanup;	// IMP=0x0000000000146d23
- (void)cleanupSynchronously;	// IMP=0x0000000000146b8b
- (void)fetchSynchronouslyForKnownChanges;	// IMP=0x0000000000146b74
- (void)fetchSynchronously;	// IMP=0x0000000000146b60
- (void)checkNewMail;	// IMP=0x0000000000146b49
- (void)_fetchForCheckingNewMail:(BOOL)arg1;	// IMP=0x0000000000146ac3
@property(readonly, nonatomic) BOOL isAllMailMailbox;
@property(readonly, nonatomic) BOOL isInbox;
- (BOOL)shouldCallCompactWhenClosing;	// IMP=0x0000000000146989
- (void)invalidateSyncEngine;	// IMP=0x0000000000146848
- (void)_invalidate;	// IMP=0x0000000000146587
- (void)asynchronousCopyOfAllMessagesWithOptions:(id)arg1;	// IMP=0x00000000001464b0
- (void)openSynchronouslyWithoutUserInteraction;	// IMP=0x00000000001463b1
- (void)openSynchronouslyUpdatingMetadata:(BOOL)arg1;	// IMP=0x00000000001462ad
- (void)_openSynchronouslyUpdatingMetadata:(BOOL)arg1 withOptions:(unsigned long long)arg2;	// IMP=0x0000000000146115
- (void)openAsynchronously;	// IMP=0x00000000001460d1
@property(readonly, copy, nonatomic) NSArray *messagesForImporter;
@property(readonly) BOOL isReadOnly;
@property(readonly, nonatomic) unsigned int permanentFlags;
- (BOOL)_isSynchronized;	// IMP=0x0000000000145dc4
- (BOOL)_isRebuildingOrSynchronizing;	// IMP=0x0000000000145d0f
- (id)_IMAPMailbox;	// IMP=0x0000000000145cb7
- (void)dealloc;	// IMP=0x0000000000145c8a
- (id)initWithCriterion:(id)arg1 mailbox:(id)arg2 readOnly:(BOOL)arg3;	// IMP=0x00000000001458ff
- (id)objectSpecifierForMessage:(id)arg1;	// IMP=0x00000000001ef637

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSString *displayName;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL isSmartMailbox;
@property(readonly, nonatomic) BOOL isTrash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) BOOL supportsSnippets;

@end

