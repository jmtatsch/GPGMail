//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "IMAP/CDStructures.h"
#import "MailFW/CDStructures.h"

//#import "NSObject.h"

@interface MFLibrary : NSObject
{
}

+ (unsigned long long)numberOfMessagesForAccount:(id)arg1;	// IMP=0x000000000013df20
+ (void)queueStoreFinishedFirstTimeSyncWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000000013df07
+ (void)queueMessagesDeletedBackupManagerNotification:(id)arg1;	// IMP=0x000000000013dd8c
+ (void)queueMessagesCompactedNotification:(id)arg1;	// IMP=0x000000000013da88
+ (void)queueMessageGmailLabelsChangedNotificationForMessages:(id)arg1;	// IMP=0x000000000013d9be
+ (void)_queueMessagesChangedNotificationForMessages:(id)arg1 flags:(id)arg2 oldFlagsByMessage:(id)arg3 updateEmlx:(BOOL)arg4;	// IMP=0x000000000013d4be
+ (void)queueMessagesUpdatedNotification:(id)arg1;	// IMP=0x000000000013d1ba
+ (void)queueMessagesAddedNotification:(id)arg1;	// IMP=0x000000000013ceb6
+ (void)queueMessagesNotification:(id)arg1 withUserInfo:(id)arg2;	// IMP=0x000000000013cd1c
+ (void)registerStoreForUpdates:(id)arg1;	// IMP=0x000000000013cc9e
+ (void)_didCommit:(struct sqlite3 *)arg1;	// IMP=0x000000000013cab7
+ (id)newUnsignedForQuery:(id)arg1 db:(struct sqlite3 *)arg2;	// IMP=0x000000000013c9fe
+ (void)_tagDatabaseVersionIfNeeded:(struct sqlite3 *)arg1;	// IMP=0x000000000013bd66
+ (void)flushCachedDatabases;	// IMP=0x000000000013b9e7
+ (void)_checkInDBHandle:(id)arg1 forWriting:(BOOL)arg2;	// IMP=0x000000000013b758
+ (id)_checkOutDBHandleForWriting:(BOOL)arg1 isPrivileged:(BOOL)arg2;	// IMP=0x000000000013b185
+ (void)executeReadBlockInDatabase:(CDUnknownBlockType)arg1;	// IMP=0x000000000013b168
+ (void)executeWriteBlockInDatabase:(CDUnknownBlockType)arg1;	// IMP=0x000000000013b148
+ (void)executeBlock:(CDUnknownBlockType)arg1 isWriter:(BOOL)arg2 useTransaction:(BOOL)arg3 isPrivileged:(BOOL)arg4;	// IMP=0x0000000000138fdf
+ (id)sqlListWithArray:(id)arg1;	// IMP=0x0000000000138ca1
+ (id)_mailboxForMailboxID:(long long)arg1 forceCreation:(BOOL)arg2;	// IMP=0x0000000000138c36
+ (long long)mailboxIDForMailbox:(id)arg1 loadIfNotPresent:(BOOL)arg2;	// IMP=0x00000000001388bb
+ (BOOL)addCalendarEvent:(id)arg1 toMessage:(id)arg2;	// IMP=0x000000000013832a
+ (id)calendarEventForMessageID:(long long)arg1;	// IMP=0x0000000000137b40
+ (void)prepareToReImportMessages;	// IMP=0x0000000000137afa
+ (unsigned long long)cleanOldDatabases;	// IMP=0x00000000001373dc
+ (void)setTotalNumberOfMessages:(unsigned long long)arg1;	// IMP=0x00000000001373b0
+ (unsigned long long)totalNumberOfMessages;	// IMP=0x0000000000137383
+ (unsigned long long)runningIndexOfCurrentMessage;	// IMP=0x0000000000137356
+ (void)incrementRunningIndexOfCurrentMessage;	// IMP=0x000000000013732c
+ (void)setCurrentMailbox:(id)arg1;	// IMP=0x00000000001372ae
+ (id)currentMailbox;	// IMP=0x0000000000137274
+ (void)setInitialized;	// IMP=0x0000000000137266
+ (BOOL)isInitialized;	// IMP=0x0000000000137255
+ (long long)libraryStatusAsReader;	// IMP=0x0000000000137241
+ (long long)libraryStatusAsWriter;	// IMP=0x000000000013722a
+ (long long)_libraryStatusCanWrite:(BOOL)arg1;	// IMP=0x000000000013712b
+ (void)dispose;	// IMP=0x0000000000137122
+ (BOOL)_fileExists;	// IMP=0x00000000001370ac
+ (void)takeAccountsOnlineAllAccounts:(BOOL)arg1;	// IMP=0x0000000000136e63
+ (void)upgradeMessageDirectoriesIfNeeded;	// IMP=0x0000000000136c18
+ (void)_upgradeMessageDirectoriesSynchronously;	// IMP=0x0000000000136069
+ (id)_messagesDirectoryPathsFromDataPath:(id)arg1;	// IMP=0x0000000000135c3e
+ (id)_versionedMessagesDirectoryPathsForMailboxPath:(id)arg1 uuidDirectoryPaths:(id *)arg2;	// IMP=0x000000000013582a
+ (id)importMailboxRowIDs;	// IMP=0x0000000000135819
+ (id)importSubjectRowIDs;	// IMP=0x0000000000135808
+ (id)importAddressRowIDs;	// IMP=0x00000000001357f7
+ (BOOL)importMessagesFromEnabledAccounts;	// IMP=0x0000000000132a54
+ (void)setLibraryIsImporting:(BOOL)arg1;	// IMP=0x0000000000132a2a
+ (BOOL)libraryIsImporting;	// IMP=0x00000000001329fe
+ (BOOL)_importMailbox:(id)arg1;	// IMP=0x00000000001317ea
+ (BOOL)rebuildMailbox:(id)arg1;	// IMP=0x000000000013041f
+ (void)setLastSpotlightCheckDate:(id)arg1 forMessageIDs:(id)arg2;	// IMP=0x000000000012fd89
+ (id)messagesInMailbox:(id)arg1 sinceLastSpotlightCheck:(id)arg2;	// IMP=0x000000000012fbf5
+ (id)criterionExpressionStringForStartLibraryID:(long long)arg1 count:(unsigned long long)arg2;	// IMP=0x000000000012f9ee
+ (BOOL)boolForCriterion:(id)arg1;	// IMP=0x000000000012f932
+ (unsigned long long)countForCriterion:(id)arg1;	// IMP=0x000000000012f7fa
+ (id)_queryForCountCriterion:(id)arg1;	// IMP=0x000000000012f6f6
+ (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 searchType:(long long)arg3;	// IMP=0x000000000012f5bb
+ (id)_spotlightCallbackDispatchQueue;	// IMP=0x000000000012f5aa
+ (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 searchType:(long long)arg4 queryLabel:(id)arg5 async:(BOOL)arg6;	// IMP=0x000000000012e3a8
+ (struct __MDQuery *)createAllMailboxesSpotlightQueryWithQueryString:(id)arg1 attributes:(struct __CFArray *)arg2 queryLabel:(id)arg3 forUnreadCount:(BOOL)arg4 withMailboxExclusions:(BOOL)arg5 includeWhereFromsCriterion:(BOOL)arg6;	// IMP=0x000000000012df1e
+ (id)queryForCriterion:(id)arg1 options:(unsigned int)arg2;	// IMP=0x000000000012cb38
+ (id)queryForCriterion:(id)arg1 options:(unsigned int)arg2 baseTable:(unsigned long long)arg3 isSubquery:(BOOL)arg4 fixUpCriterion:(BOOL)arg5;	// IMP=0x000000000012c859
+ (void)markMessageAsViewed:(id)arg1 viewedDate:(id)arg2;	// IMP=0x000000000012c663
+ (id)attachmentURLForMessage:(id)arg1 partNumber:(id)arg2 attachmentFilename:(id)arg3 isMailDropImageArchive:(BOOL)arg4 isMailDropImageThumbnail:(BOOL)arg5;	// IMP=0x000000000012c493
+ (BOOL)hasCacheFileForMessage:(id)arg1 part:(id)arg2;	// IMP=0x000000000012c33a
+ (BOOL)hasCacheFileForMessage:(id)arg1;	// IMP=0x000000000012c2e8
+ (id)incompleteMessagesForMailbox:(id)arg1 sinceDate:(id)arg2;	// IMP=0x000000000012c1d1
+ (id)_messageDataAtPath:(id)arg1;	// IMP=0x000000000012c101
+ (BOOL)isMessageContentLocallyAvailable:(id)arg1;	// IMP=0x000000000012c0ec
+ (id)fullMessageDataForMessage:(id)arg1;	// IMP=0x000000000012c08d
+ (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;	// IMP=0x000000000012c029
+ (id)bodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;	// IMP=0x000000000012bf3b
+ (id)headerDataForMessageWithPath:(id)arg1;	// IMP=0x000000000012bd33
+ (id)headerDataForLibraryID:(long long)arg1 mailboxID:(long long)arg2;	// IMP=0x000000000012bc11
+ (id)_bodyDataAtPath:(id)arg1 headerData:(id *)arg2;	// IMP=0x000000000012b969
+ (id)mimeBodyForMessage:(id)arg1;	// IMP=0x000000000012b6be
+ (id)mimeMessageDataSnippingPartsData:(id)arg1 mimePartBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000000012b287
+ (void)writeAttachmentsIfNeededForMessage:(id)arg1;	// IMP=0x000000000012a879
+ (void)appendMimeData:(id)arg1 forMessage:(id)arg2 partNumber:(id)arg3;	// IMP=0x000000000012a2c7
+ (BOOL)_writeAttachmentWithDecodedData:(id)arg1 forMessage:(id)arg2 mimePart:(id)arg3 headers:(id)arg4;	// IMP=0x0000000000129cce
+ (void)setData:(id)arg1 forMessage:(id)arg2 isPartial:(BOOL)arg3 hasCompleteText:(BOOL)arg4;	// IMP=0x0000000000128f72
+ (id)snipAttachmentMimeForFileIfNeeded:(id)arg1 originalMessageData:(id)arg2 forMessage:(id)arg3;	// IMP=0x00000000001281a4
+ (id)existingDataFileForMessage:(id)arg1;	// IMP=0x0000000000128086
+ (id)messageWithDataPath:(id)arg1;	// IMP=0x0000000000127e8b
+ (id)_dataPathForMessageWithLibraryID:(long long)arg1 mailboxID:(long long)arg2 type:(long long)arg3;	// IMP=0x0000000000127e15
+ (id)_dataPathForMessage:(id)arg1 type:(long long)arg2;	// IMP=0x0000000000127d56
+ (id)dataURLForMessage:(id)arg1 partNumber:(id)arg2;	// IMP=0x0000000000127c1b
+ (id)dataPathForMessage:(id)arg1;	// IMP=0x0000000000127c07
+ (id)_dataPathForMessageWithLibraryID:(long long)arg1 mailboxID:(long long)arg2 withFilename:(id)arg3;	// IMP=0x0000000000127b02
+ (id)dataPathForLibraryID:(long long)arg1 pathToMailbox:(id)arg2 type:(long long)arg3;	// IMP=0x00000000001278ee
+ (id)dataPathForLibraryID:(long long)arg1 pathToMailbox:(id)arg2 fileExists:(char *)arg3;	// IMP=0x0000000000127802
+ (id)attachmentsDirectoryForMessage:(id)arg1 partNumber:(id)arg2;	// IMP=0x000000000012774a
+ (id)attachmentsDirectoryForMessage:(id)arg1;	// IMP=0x000000000012751a
+ (id)filenameForLibraryID:(long long)arg1 type:(long long)arg2;	// IMP=0x00000000001274b0
+ (id)filenameForLibraryID:(long long)arg1 part:(id)arg2;	// IMP=0x000000000012747d
+ (id)intermediateDirectoryForLibraryID:(long long)arg1 forAttachments:(BOOL)arg2;	// IMP=0x000000000012740a
+ (id)versionedIntermediateDirectoryForLibraryID:(long long)arg1 forAttachments:(BOOL)arg2;	// IMP=0x00000000001272c0
+ (id)dataDirectoryForMailbox:(id)arg1;	// IMP=0x00000000001270f3
+ (void)_invalidateDirectoryForMailboxes:(id)arg1;	// IMP=0x0000000000127061
+ (id)databaseUUIDString;	// IMP=0x0000000000126fa8
+ (void)_setDatabaseUUIDString:(id)arg1;	// IMP=0x0000000000126efa
+ (void)loadDatabaseUUIDStringIfNeeded:(struct sqlite3 *)arg1;	// IMP=0x0000000000126ded
+ (void)updateEWSOfflineIdsToRealIds:(id)arg1;	// IMP=0x0000000000126278
+ (id)EWSSyncStateForMailbox:(id)arg1;	// IMP=0x0000000000126252
+ (void)setEWSSyncState:(id)arg1 forMailbox:(id)arg2;	// IMP=0x00000000001261ff
+ (id)EWSFolderIdsByURLForMailboxes:(id)arg1;	// IMP=0x00000000001257e9
+ (id)EWSFolderIdForMailbox:(id)arg1;	// IMP=0x0000000000125773
+ (void)setEWSFolderId:(id)arg1 forMailbox:(id)arg2;	// IMP=0x0000000000124cf9
+ (id)_EWSProperty:(char *)arg1 forMailbox:(id)arg2 errorString:(id)arg3;	// IMP=0x000000000012473a
+ (void)_addEWSProperty:(char *)arg1 value:(id)arg2 forMailbox:(id)arg3 errorString:(id)arg4;	// IMP=0x000000000012427f
+ (BOOL)_EWSFolderExistsForMailbox:(id)arg1 errorString:(id)arg2;	// IMP=0x0000000000123d91
+ (id)parsedMessageForMessage:(id)arg1;	// IMP=0x0000000000123880
+ (id)draftWithDocumentID:(id)arg1 mailbox:(id)arg2;	// IMP=0x000000000012319c
+ (id)lastMessageWithMessageID:(id)arg1 inMailbox:(id)arg2;	// IMP=0x0000000000123104
+ (id)messagesWithMessageID:(id)arg1 inMailbox:(id)arg2;	// IMP=0x0000000000122eda
+ (void)deleteMailboxes:(id)arg1 forRebuild:(BOOL)arg2;	// IMP=0x00000000001222af
+ (BOOL)renameMailboxes:(id)arg1 to:(id)arg2;	// IMP=0x00000000001216da
+ (void)compactMailbox:(id)arg1;	// IMP=0x0000000000121616
+ (CDUnknownBlockType)removeMessageBatch:(id)arg1 handle:(id)arg2 db:(struct sqlite3 *)arg3 cleanUpAfter:(BOOL)arg4 errorOccured:(char *)arg5;	// IMP=0x000000000012092d
+ (void)removeMessages:(id)arg1 cleanUpAfter:(BOOL)arg2;	// IMP=0x00000000001203be
+ (void)removeMessages:(id)arg1;	// IMP=0x0000000000120251
+ (void)deleteFilesForMessageWithLibraryID:(long long)arg1 emlxDirectory:(id)arg2 attachmentsDirectory:(id)arg3 cachedDirectoryContents:(id)arg4;	// IMP=0x000000000011fe0d
+ (BOOL)shouldCancel;	// IMP=0x000000000011fe05
+ (void)updateFileForMessage:(id)arg1;	// IMP=0x000000000011f855
+ (void)reloadMessage:(id)arg1;	// IMP=0x000000000011f3ee
+ (void)resetConversationsForExistingMessagesWithRowIDs:(id)arg1 withDB:(struct sqlite3 *)arg2;	// IMP=0x000000000011e9f8
+ (id)snippetsForMessages:(id)arg1;	// IMP=0x000000000011dfc2
+ (void)loadSecondaryMetadataForMessage:(id)arg1;	// IMP=0x000000000011d220
+ (id)mailboxNameForMessage:(id)arg1;	// IMP=0x000000000011d1a3
+ (id)accountForMessage:(id)arg1;	// IMP=0x000000000011d153
+ (id)_remoteStoreForMessage:(id)arg1;	// IMP=0x000000000011d035
+ (id)_mailboxForMailboxID:(long long)arg1;	// IMP=0x000000000011cfd9
+ (id)mailboxForMessage:(id)arg1;	// IMP=0x000000000011cfa5
+ (id)urlForMailboxID:(long long)arg1;	// IMP=0x000000000011cd1c
+ (void)mailboxesDidChange;	// IMP=0x000000000011ccee
+ (id)copyMailboxURLToRowIDMap;	// IMP=0x000000000011cbe9
+ (id)referencesForLibraryID:(long long)arg1;	// IMP=0x000000000011c68d
+ (BOOL)boolForQuery:(id)arg1;	// IMP=0x000000000011c174
+ (unsigned long long)unsignedCountForQuery:(id)arg1 monitor:(id)arg2;	// IMP=0x000000000011b9e1
+ (BOOL)messageHasRelatedNonJunkMessages:(id)arg1;	// IMP=0x000000000011b548
+ (id)firstReplyToMessage:(id)arg1;	// IMP=0x000000000011ad12
+ (id)messagesWithLibraryIDs:(id)arg1 options:(unsigned int)arg2;	// IMP=0x000000000011aabf
+ (id)messageWithLibraryID:(long long)arg1;	// IMP=0x000000000011aaab
+ (id)messageWithLibraryID:(long long)arg1 options:(unsigned int)arg2;	// IMP=0x000000000011a4ad
+ (id)messagesWithMessageIDHeader:(id)arg1;	// IMP=0x000000000011a3c9
+ (id)messageWithMessageID:(id)arg1;	// IMP=0x000000000011a330
+ (void)setStoreForMessage:(id)arg1 fromMailbox:(id)arg2 knownStores:(id)arg3;	// IMP=0x000000000011a15f
+ (void)_setStoreForMessage:(id)arg1 knownStores:(id)arg2;	// IMP=0x000000000011a0bd
+ (void)setStoresForMessages:(id)arg1;	// IMP=0x0000000000119f39
+ (id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2 options:(unsigned int)arg3;	// IMP=0x0000000000119877
+ (id)messagesWithRemoteIDs:(id)arg1 inMailbox:(id)arg2 options:(unsigned int)arg3;	// IMP=0x000000000011856d
+ (unsigned long long)unreadCountForMessageType:(BOOL)arg1;	// IMP=0x0000000000118094
+ (unsigned long long)totalCountForMailbox:(id)arg1 unseenCount:(unsigned long long *)arg2 adjustedUnreadCount:(unsigned long long *)arg3;	// IMP=0x0000000000117a6a
+ (void)gatherCountsForMailbox:(id)arg1 totalCount:(unsigned long long *)arg2 unreadCount:(unsigned long long *)arg3 deletedCount:(unsigned long long *)arg4 totalSize:(unsigned long long *)arg5;	// IMP=0x0000000000117524
+ (id)unreadMessagesForMailbox:(id)arg1;	// IMP=0x000000000011738d
+ (id)duplicateRemoteIDsForMailboxWithURLString:(id)arg1;	// IMP=0x0000000000116eb3
+ (id)messagesForGmailLabel:(id)arg1 inAllMailMailbox:(id)arg2 olderThanNumberOfDays:(long long)arg3;	// IMP=0x0000000000116b30
+ (id)messagesForMailbox:(id)arg1 olderThanNumberOfDays:(long long)arg2;	// IMP=0x0000000000116851
+ (id)messagesForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(BOOL)arg4 options:(unsigned int)arg5;	// IMP=0x0000000000116742
+ (char *)_queryForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(BOOL)arg4 options:(unsigned int)arg5;	// IMP=0x000000000011649b
+ (id)messagesWhere:(id)arg1 sortedBy:(id)arg2 options:(unsigned int)arg3;	// IMP=0x00000000001161d1
+ (id)messagesMatchingQuery:(const char *)arg1 options:(unsigned int)arg2;	// IMP=0x00000000001160be
+ (void)sendMessagesMatchingQuery:(const char *)arg1 to:(id)arg2 options:(unsigned int)arg3;	// IMP=0x0000000000115219
+ (void)setRecipientTypeForMessages:(id)arg1;	// IMP=0x0000000000114a23
+ (id)_activeMailboxesClauseRebuildIfNecessary;	// IMP=0x000000000011486c
+ (BOOL)_isActiveMailboxID:(long long)arg1;	// IMP=0x00000000001147f8
+ (id)_copyActiveMailboxesCache;	// IMP=0x000000000011468f
+ (void)_rebuildActiveMailboxesCacheIfNecessary;	// IMP=0x0000000000114569
+ (void)_rebuildActiveMailboxesCache;	// IMP=0x0000000000113e67
+ (void)_getActiveAccountURLs:(id)arg1 andActiveMailboxURLs:(id)arg2;	// IMP=0x00000000001139a5
+ (void)disableActiveMailboxFiltering;	// IMP=0x0000000000113642
+ (void)clearActiveMailboxesCache;	// IMP=0x00000000001135aa
+ (id)myAddressIDsString;	// IMP=0x0000000000112ab0
+ (void)invalidateMyEmailAddressesIfContains:(id)arg1;	// IMP=0x0000000000112a10
+ (void)invalidateMyEmailAddresses;	// IMP=0x00000000001129bf
+ (long long)threadPriority;	// IMP=0x0000000000112918
+ (void)setAttachmentNames:(id)arg1 forMessage:(id)arg2;	// IMP=0x00000000001120e5
+ (void)updateDatabaseValuesIfNeeded;	// IMP=0x0000000000111ce1
+ (CDStruct_f4b747e6)messageColorForLibraryMessageColor:(char *)arg1;	// IMP=0x0000000000111c7c
+ (char *)libraryMessageColorForMessageColor:(CDStruct_f4b747e6)arg1;	// IMP=0x0000000000111c06
+ (id)referencesAsEncodedMessageIDStringFromMessageHeaders:(id)arg1;	// IMP=0x000000000011191c
+ (void)addGmailLabelsToEmlx;	// IMP=0x0000000000110f6d
+ (void)hideMailboxesNotInLibraryFromSpotlight;	// IMP=0x00000000001107aa
+ (void)backfillDateLastViewedAttribute;	// IMP=0x0000000000110062
+ (void)_updateDateLastViewed:(int)arg1 forLibraryID:(long long)arg2;	// IMP=0x000000000010fdde
+ (void)deleteDataDirectoriesForMailbox:(id)arg1;	// IMP=0x000000000010fc76
+ (void)triggerFullSpotlightImportOfDirectory:(id)arg1;	// IMP=0x000000000010fb15
+ (void)removeExtendedAttributePlistFromEmlxFile:(id)arg1;	// IMP=0x000000000010fa6b
+ (id)propertyListForMessage:(id)arg1 dateReceived:(id)arg2 dateLastViewed:(id)arg3 remoteID:(id)arg4 gmailLabels:(id)arg5 flags:(long long)arg6 mergeWithDictionary:(id)arg7;	// IMP=0x000000000010f516
+ (id)_coreSpotlightIndexQueue;	// IMP=0x000000000010f456
+ (void)_deleteMailboxFromCoreSpotlight:(id)arg1;	// IMP=0x000000000010f108
+ (void)_deleteMessageFromCoreSpotlight:(id)arg1;	// IMP=0x000000000010ed54
+ (void)sendSearchableItemsToCoreSpotlight:(id)arg1;	// IMP=0x000000000010e852
+ (void)_sendAttributesToCoreSpotlightForMessage:(id)arg1 parsedMessage:(id)arg2 update:(BOOL)arg3;	// IMP=0x000000000010e402
+ (id)createAddresseeStringFromDisplayName:(const char *)arg1 address:(const char *)arg2 stringUniquer:(id)arg3 addressIndex:(long long)arg4;	// IMP=0x000000000010e1ef
+ (long long)rowidForMailboxURL:(id)arg1 handle:(id)arg2 cache:(id)arg3;	// IMP=0x000000000010dd39
+ (void)updateNormalizedSubjectsIfNeededWithHandle:(id)arg1;	// IMP=0x000000000010d5f7
+ (void)_mailAccountsDidChange:(id)arg1;	// IMP=0x000000000010d5c0
+ (void)_mailboxWasRenamed:(id)arg1;	// IMP=0x000000000010d4b2
+ (void)_mailboxWillBeInvalidated:(id)arg1;	// IMP=0x000000000010d401
+ (BOOL)setupLibrary;	// IMP=0x000000000010c3f4
+ (void)removeCurrentTemporaryDatabaseFiles;	// IMP=0x000000000010be97
+ (void)initialize;	// IMP=0x000000000010b7b9
+ (id)writeQueue;	// IMP=0x000000000010b7a8
+ (BOOL)initializeDatabase:(struct sqlite3 *)arg1;	// IMP=0x000000000010ab21
+ (void)updateSize:(id)arg1 forMessage:(id)arg2;	// IMP=0x000000000010a459
+ (void)setFlagsAndColorForMessages:(id)arg1;	// IMP=0x0000000000109958
+ (void)setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;	// IMP=0x0000000000108bb0
+ (void)_commitFlagsForMessage:(id)arg1 oldFlags:(id)arg2;	// IMP=0x0000000000107f25
+ (void)updateGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2;	// IMP=0x0000000000107b05
+ (id)_mailboxIDsStringForMailboxes:(id)arg1;	// IMP=0x0000000000107902
+ (void)removeSourceMailbox:(id)arg1;	// IMP=0x0000000000107046
+ (void)setSourceMailbox:(id)arg1 forMailboxes:(id)arg2;	// IMP=0x00000000001065fc
+ (void)recalculateMessageCountsForMailboxIDs:(id)arg1;	// IMP=0x0000000000105369
+ (void)loadMessageCountsForMailboxes;	// IMP=0x0000000000104c1f
+ (void)commitFlagsForMessage:(id)arg1 oldFlags:(long long)arg2;	// IMP=0x0000000000104b1d
+ (void)setSnippetsForMessages:(id)arg1;	// IMP=0x0000000000104592
+ (void)_removeGmailLabelsFromMessages:(id)arg1 db:(struct sqlite3 *)arg2 libraryIDs:(id)arg3 labels:(id)arg4;	// IMP=0x0000000000103e64
+ (void)addGmailLabelsToMessagesWithHandle:(id)arg1 db:(struct sqlite3 *)arg2 libraryIDs:(id)arg3 labels:(id)arg4;	// IMP=0x0000000000103674
+ (void)closeLibrary;	// IMP=0x0000000000103568
+ (void)_updateMessageFilesInBackground;	// IMP=0x0000000000103483
+ (void)_commitMessagesInBackground:(id)arg1;	// IMP=0x00000000001033e0
+ (void)commitSynchronouslyPostingMessages:(id)arg1 postFlags:(id)arg2 postingOldFlagsByMessage:(id)arg3;	// IMP=0x000000000010246d
+ (void)commitSynchronously;	// IMP=0x0000000000102454
+ (void)_synchronouslyUpdateMessageFiles;	// IMP=0x0000000000101d51
+ (void)unScheduleMessageFileUpdate;	// IMP=0x0000000000101cbd
+ (void)scheduleMessageFileUpdate;	// IMP=0x0000000000101c0f
+ (void)unScheduleCommit;	// IMP=0x0000000000101bfb
+ (void)scheduleCommit;	// IMP=0x0000000000101b2f
+ (void)_setCommitTimer:(id)arg1;	// IMP=0x00000000001019e7
+ (void)_addMessagesNeedingEmlxUpdate:(id)arg1;	// IMP=0x000000000010183c
+ (void)setDateReceivedInterval:(double)arg1 forMessage:(id)arg2;	// IMP=0x00000000001013dd
+ (void)updateJunkMessagesForIndexing;	// IMP=0x0000000000101231
+ (void)flagsChangedForMessages:(id)arg1;	// IMP=0x00000000001010fb
+ (void)restoreBackingStoreUpdateJournalIfNeeded;	// IMP=0x0000000000100e90
+ (void)_mergeRestoreMessageLibraryIDsToUpdate:(id)arg1;	// IMP=0x0000000000100d0d
+ (BOOL)updateBackingStoreUpdateJournal;	// IMP=0x0000000000100179
+ (BOOL)removeBackingStoreUpdateJournal;	// IMP=0x00000000000fff6b
+ (id)_backingStoreJournalFile;	// IMP=0x00000000000fff12
+ (id)_backingStoreJournalDirectory;	// IMP=0x00000000000ffef9
+ (void)commitMessage:(id)arg1 immediately:(BOOL)arg2;	// IMP=0x00000000000ffdfa
+ (BOOL)logSQLitePerformance;	// IMP=0x00000000000ffded
+ (void)loadSearchSettings;	// IMP=0x00000000000ffcef
+ (id)log;	// IMP=0x00000000000ffc90

@end

